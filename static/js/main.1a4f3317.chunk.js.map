{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","div","Title","span","Grid","Section","title","children","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","require","role","aria-label","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","updateTerm","searchTerm","handleSubmit","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","InfoContainer","Info","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a4f3317.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.334a3daf.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  font-weight: bold;\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: #141414;\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.2);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 5px solid\n    ${(props) => (props.current ? \"rgba(241, 196, 15,1.0)\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">영화</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV 프로그램</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">검색</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"03bf7b4f663af97f9768519ade870e62\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 20px;\n  margin-top: 15%;\n`;\n\nexport default () => <Container>Loading...</Container>;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 13px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 3px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n      transition: opacity 0.1s linear;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 11px;\n  color: rgba(51, 51, 51, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\"\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>영화 | Letflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>영화 | Letflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"현재상영작\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"개봉예정작\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"인기 영화\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#c0392b\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n  \n  \n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport { moviesApi } from \"../../api\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({ error: \"결과를 찾을 수 없습니다. :(\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\"\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) =>(\n<>\n<Helmet><title>TV 프로그램 | Letflix</title></Helmet>\n{loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      {topRated && topRated.length > 0 && (\n        <Section title=\"최고의 프로그램\">\n          {topRated.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"인기 프로그램\">\n          {popular.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"오늘의 방송\">\n          {airingToday.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message color=\"#c0392b\" text={error} />}\n    </Container>\n  )}\n</>\n)\n  \n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport { tvApi } from \"../../api\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({ error: \"결과를 찾을 수 없습니다. :(\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  updateTerm,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n}) => (\n  <Container>\n    <Helmet>\n      <title>검색 | Letflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"검색\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"영화\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV 프로그램\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message color=\"#c0392b\" text={error} />}\n    {tvResults &&\n      movieResults &&\n      tvResults.length === 0 &&\n      movieResults.length === 0 && (\n        <Message text=\"찾으시는 결과가 존재하지 않습니다. :(\" color=\"#95a5a6\" />\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"결과를 찾을 수 없습니다. :(\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        error={error}\n        loading={loading}\n        updateTerm={this.updateTerm}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(2px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n  margin-right: 10px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst InfoContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Info = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 14px;\n  opacity: 0.8;\n  line-height: 1.5;\n  width: 60%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Letflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Letflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <InfoContainer>\n            <Info>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Info>\n            <Divider>•</Divider>\n            <Info>\n              {result.runtime ? result.runtime : result.episode_run_time}분\n            </Info>\n            <Divider>•</Divider>\n            <Info>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Info>\n            <Divider>•</Divider>\n            <Info>\n            {result.vote_average > 8.9\n                ? \"⭐⭐⭐⭐⭐\"\n                : result.vote_average > 6.9\n                ? \"⭐⭐⭐⭐\"\n                : result.vote_average > 4.9\n                ? \"⭐⭐⭐\"\n                : result.vote_average > 2.9\n                ? \"⭐⭐\"\n                : \"⭐\"}\n            </Info>\n          </InfoContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"ERROR! :(\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    console.log(result);\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px;\n        background-color: #141414;\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}